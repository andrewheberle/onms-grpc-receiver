//
// Licensed to The OpenNMS Group, Inc (TOG) under one or more
// contributor license agreements.  See the LICENSE.md file
// distributed with this work for additional information
// regarding copyright ownership.
//
// TOG licenses this file to You under the GNU Affero General
// Public License Version 3 (the "License") or (at your option)
// any later version.  You may not use this file except in
// compliance with the License.  You may obtain a copy of the
// License at:
//
//      https://www.gnu.org/licenses/agpl-3.0.txt
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied.  See the License for the specific
// language governing permissions and limitations under the
// License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: spog.proto

package spog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_INDETERMINATE Severity = 0
	Severity_CLEARED       Severity = 1
	Severity_NORMAL        Severity = 2
	Severity_WARNING       Severity = 3
	Severity_MINOR         Severity = 4
	Severity_MAJOR         Severity = 5
	Severity_CRITICAL      Severity = 6
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INDETERMINATE",
		1: "CLEARED",
		2: "NORMAL",
		3: "WARNING",
		4: "MINOR",
		5: "MAJOR",
		6: "CRITICAL",
	}
	Severity_value = map[string]int32{
		"INDETERMINATE": 0,
		"CLEARED":       1,
		"NORMAL":        2,
		"WARNING":       3,
		"MINOR":         4,
		"MAJOR":         5,
		"CRITICAL":      6,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_spog_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_spog_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{0}
}

type Alarm_Type int32

const (
	Alarm_PROBLEM_WITH_CLEAR    Alarm_Type = 0
	Alarm_CLEAR                 Alarm_Type = 1
	Alarm_PROBLEM_WITHOUT_CLEAR Alarm_Type = 2
)

// Enum value maps for Alarm_Type.
var (
	Alarm_Type_name = map[int32]string{
		0: "PROBLEM_WITH_CLEAR",
		1: "CLEAR",
		2: "PROBLEM_WITHOUT_CLEAR",
	}
	Alarm_Type_value = map[string]int32{
		"PROBLEM_WITH_CLEAR":    0,
		"CLEAR":                 1,
		"PROBLEM_WITHOUT_CLEAR": 2,
	}
)

func (x Alarm_Type) Enum() *Alarm_Type {
	p := new(Alarm_Type)
	*p = x
	return p
}

func (x Alarm_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alarm_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_spog_proto_enumTypes[1].Descriptor()
}

func (Alarm_Type) Type() protoreflect.EnumType {
	return &file_spog_proto_enumTypes[1]
}

func (x Alarm_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alarm_Type.Descriptor instead.
func (Alarm_Type) EnumDescriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{4, 0}
}

type NodeCriteria struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ForeignSource string                 `protobuf:"bytes,2,opt,name=foreign_source,json=foreignSource,proto3" json:"foreign_source,omitempty"`
	ForeignId     string                 `protobuf:"bytes,3,opt,name=foreign_id,json=foreignId,proto3" json:"foreign_id,omitempty"`
	NodeLabel     string                 `protobuf:"bytes,4,opt,name=node_label,json=nodeLabel,proto3" json:"node_label,omitempty"`
	Location      string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeCriteria) Reset() {
	*x = NodeCriteria{}
	mi := &file_spog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCriteria) ProtoMessage() {}

func (x *NodeCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCriteria.ProtoReflect.Descriptor instead.
func (*NodeCriteria) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{0}
}

func (x *NodeCriteria) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeCriteria) GetForeignSource() string {
	if x != nil {
		return x.ForeignSource
	}
	return ""
}

func (x *NodeCriteria) GetForeignId() string {
	if x != nil {
		return x.ForeignId
	}
	return ""
}

func (x *NodeCriteria) GetNodeLabel() string {
	if x != nil {
		return x.NodeLabel
	}
	return ""
}

func (x *NodeCriteria) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type IpInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	PrimaryType   string                 `protobuf:"bytes,3,opt,name=primary_type,json=primaryType,proto3" json:"primary_type,omitempty"`
	Service       []string               `protobuf:"bytes,4,rep,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpInterface) Reset() {
	*x = IpInterface{}
	mi := &file_spog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpInterface) ProtoMessage() {}

func (x *IpInterface) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpInterface.ProtoReflect.Descriptor instead.
func (*IpInterface) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{1}
}

func (x *IpInterface) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IpInterface) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *IpInterface) GetPrimaryType() string {
	if x != nil {
		return x.PrimaryType
	}
	return ""
}

func (x *IpInterface) GetService() []string {
	if x != nil {
		return x.Service
	}
	return nil
}

type SnmpInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IfIndex       uint32                 `protobuf:"varint,2,opt,name=if_index,json=ifIndex,proto3" json:"if_index,omitempty"`
	IfDescr       string                 `protobuf:"bytes,3,opt,name=if_descr,json=ifDescr,proto3" json:"if_descr,omitempty"`
	IfType        uint32                 `protobuf:"varint,4,opt,name=if_type,json=ifType,proto3" json:"if_type,omitempty"`
	IfName        string                 `protobuf:"bytes,5,opt,name=if_name,json=ifName,proto3" json:"if_name,omitempty"`
	IfSpeed       uint64                 `protobuf:"varint,6,opt,name=if_speed,json=ifSpeed,proto3" json:"if_speed,omitempty"`
	IfPhysAddress string                 `protobuf:"bytes,7,opt,name=if_phys_address,json=ifPhysAddress,proto3" json:"if_phys_address,omitempty"`
	IfAdminStatus uint32                 `protobuf:"varint,8,opt,name=if_admin_status,json=ifAdminStatus,proto3" json:"if_admin_status,omitempty"`
	IfOperStatus  uint32                 `protobuf:"varint,9,opt,name=if_oper_status,json=ifOperStatus,proto3" json:"if_oper_status,omitempty"`
	IfAlias       string                 `protobuf:"bytes,10,opt,name=if_alias,json=ifAlias,proto3" json:"if_alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnmpInterface) Reset() {
	*x = SnmpInterface{}
	mi := &file_spog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnmpInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnmpInterface) ProtoMessage() {}

func (x *SnmpInterface) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnmpInterface.ProtoReflect.Descriptor instead.
func (*SnmpInterface) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{2}
}

func (x *SnmpInterface) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SnmpInterface) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

func (x *SnmpInterface) GetIfDescr() string {
	if x != nil {
		return x.IfDescr
	}
	return ""
}

func (x *SnmpInterface) GetIfType() uint32 {
	if x != nil {
		return x.IfType
	}
	return 0
}

func (x *SnmpInterface) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *SnmpInterface) GetIfSpeed() uint64 {
	if x != nil {
		return x.IfSpeed
	}
	return 0
}

func (x *SnmpInterface) GetIfPhysAddress() string {
	if x != nil {
		return x.IfPhysAddress
	}
	return ""
}

func (x *SnmpInterface) GetIfAdminStatus() uint32 {
	if x != nil {
		return x.IfAdminStatus
	}
	return 0
}

func (x *SnmpInterface) GetIfOperStatus() uint32 {
	if x != nil {
		return x.IfOperStatus
	}
	return 0
}

func (x *SnmpInterface) GetIfAlias() string {
	if x != nil {
		return x.IfAlias
	}
	return ""
}

type Node struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ForeignSource  string                 `protobuf:"bytes,2,opt,name=foreign_source,json=foreignSource,proto3" json:"foreign_source,omitempty"`
	ForeignId      string                 `protobuf:"bytes,3,opt,name=foreign_id,json=foreignId,proto3" json:"foreign_id,omitempty"`
	Location       string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Category       []string               `protobuf:"bytes,5,rep,name=category,proto3" json:"category,omitempty"`
	Label          string                 `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	CreateTime     uint64                 `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	SysContact     string                 `protobuf:"bytes,8,opt,name=sys_contact,json=sysContact,proto3" json:"sys_contact,omitempty"`
	SysDescription string                 `protobuf:"bytes,9,opt,name=sys_description,json=sysDescription,proto3" json:"sys_description,omitempty"`
	SysObjectId    string                 `protobuf:"bytes,10,opt,name=sys_object_id,json=sysObjectId,proto3" json:"sys_object_id,omitempty"`
	SysName        string                 `protobuf:"bytes,11,opt,name=sys_name,json=sysName,proto3" json:"sys_name,omitempty"`
	IpInterface    []*IpInterface         `protobuf:"bytes,12,rep,name=ip_interface,json=ipInterface,proto3" json:"ip_interface,omitempty"`
	SnmpInterface  []*SnmpInterface       `protobuf:"bytes,13,rep,name=snmp_interface,json=snmpInterface,proto3" json:"snmp_interface,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_spog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetForeignSource() string {
	if x != nil {
		return x.ForeignSource
	}
	return ""
}

func (x *Node) GetForeignId() string {
	if x != nil {
		return x.ForeignId
	}
	return ""
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Node) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Node) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Node) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Node) GetSysContact() string {
	if x != nil {
		return x.SysContact
	}
	return ""
}

func (x *Node) GetSysDescription() string {
	if x != nil {
		return x.SysDescription
	}
	return ""
}

func (x *Node) GetSysObjectId() string {
	if x != nil {
		return x.SysObjectId
	}
	return ""
}

func (x *Node) GetSysName() string {
	if x != nil {
		return x.SysName
	}
	return ""
}

func (x *Node) GetIpInterface() []*IpInterface {
	if x != nil {
		return x.IpInterface
	}
	return nil
}

func (x *Node) GetSnmpInterface() []*SnmpInterface {
	if x != nil {
		return x.SnmpInterface
	}
	return nil
}

type Alarm struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uei                   string                 `protobuf:"bytes,2,opt,name=uei,proto3" json:"uei,omitempty"`
	NodeCriteria          *NodeCriteria          `protobuf:"bytes,3,opt,name=node_criteria,json=nodeCriteria,proto3" json:"node_criteria,omitempty"`
	IpAddress             string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	ServiceName           string                 `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ReductionKey          string                 `protobuf:"bytes,6,opt,name=reduction_key,json=reductionKey,proto3" json:"reduction_key,omitempty"`
	Type                  uint32                 `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Count                 uint64                 `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	Severity              uint32                 `protobuf:"varint,9,opt,name=severity,proto3" json:"severity,omitempty"`
	FirstEventTime        uint64                 `protobuf:"varint,10,opt,name=first_event_time,json=firstEventTime,proto3" json:"first_event_time,omitempty"`
	Description           string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	LogMessage            string                 `protobuf:"bytes,12,opt,name=log_message,json=logMessage,proto3" json:"log_message,omitempty"`
	AckUser               string                 `protobuf:"bytes,13,opt,name=ack_user,json=ackUser,proto3" json:"ack_user,omitempty"`
	AckTime               uint64                 `protobuf:"varint,14,opt,name=ack_time,json=ackTime,proto3" json:"ack_time,omitempty"`
	LastEventTime         uint64                 `protobuf:"varint,16,opt,name=last_event_time,json=lastEventTime,proto3" json:"last_event_time,omitempty"`
	IfIndex               uint32                 `protobuf:"varint,17,opt,name=if_index,json=ifIndex,proto3" json:"if_index,omitempty"`
	OperatorInstructions  string                 `protobuf:"bytes,18,opt,name=operator_instructions,json=operatorInstructions,proto3" json:"operator_instructions,omitempty"`
	ClearKey              string                 `protobuf:"bytes,19,opt,name=clear_key,json=clearKey,proto3" json:"clear_key,omitempty"`
	ManagedObjectInstance string                 `protobuf:"bytes,20,opt,name=managed_object_instance,json=managedObjectInstance,proto3" json:"managed_object_instance,omitempty"`
	ManagedObjectType     string                 `protobuf:"bytes,21,opt,name=managed_object_type,json=managedObjectType,proto3" json:"managed_object_type,omitempty"`
	RelatedAlarm          []*Alarm               `protobuf:"bytes,22,rep,name=relatedAlarm,proto3" json:"relatedAlarm,omitempty"`
	LastUpdateTime        uint64                 `protobuf:"varint,25,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Alarm) Reset() {
	*x = Alarm{}
	mi := &file_spog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alarm) ProtoMessage() {}

func (x *Alarm) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alarm.ProtoReflect.Descriptor instead.
func (*Alarm) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{4}
}

func (x *Alarm) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Alarm) GetUei() string {
	if x != nil {
		return x.Uei
	}
	return ""
}

func (x *Alarm) GetNodeCriteria() *NodeCriteria {
	if x != nil {
		return x.NodeCriteria
	}
	return nil
}

func (x *Alarm) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Alarm) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Alarm) GetReductionKey() string {
	if x != nil {
		return x.ReductionKey
	}
	return ""
}

func (x *Alarm) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Alarm) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Alarm) GetSeverity() uint32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *Alarm) GetFirstEventTime() uint64 {
	if x != nil {
		return x.FirstEventTime
	}
	return 0
}

func (x *Alarm) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alarm) GetLogMessage() string {
	if x != nil {
		return x.LogMessage
	}
	return ""
}

func (x *Alarm) GetAckUser() string {
	if x != nil {
		return x.AckUser
	}
	return ""
}

func (x *Alarm) GetAckTime() uint64 {
	if x != nil {
		return x.AckTime
	}
	return 0
}

func (x *Alarm) GetLastEventTime() uint64 {
	if x != nil {
		return x.LastEventTime
	}
	return 0
}

func (x *Alarm) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

func (x *Alarm) GetOperatorInstructions() string {
	if x != nil {
		return x.OperatorInstructions
	}
	return ""
}

func (x *Alarm) GetClearKey() string {
	if x != nil {
		return x.ClearKey
	}
	return ""
}

func (x *Alarm) GetManagedObjectInstance() string {
	if x != nil {
		return x.ManagedObjectInstance
	}
	return ""
}

func (x *Alarm) GetManagedObjectType() string {
	if x != nil {
		return x.ManagedObjectType
	}
	return ""
}

func (x *Alarm) GetRelatedAlarm() []*Alarm {
	if x != nil {
		return x.RelatedAlarm
	}
	return nil
}

func (x *Alarm) GetLastUpdateTime() uint64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

type EventParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventParameter) Reset() {
	*x = EventParameter{}
	mi := &file_spog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventParameter) ProtoMessage() {}

func (x *EventParameter) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventParameter.ProtoReflect.Descriptor instead.
func (*EventParameter) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{5}
}

func (x *EventParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventParameter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SnmpInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Specific      uint32                 `protobuf:"varint,3,opt,name=specific,proto3" json:"specific,omitempty"`
	Generic       uint32                 `protobuf:"varint,4,opt,name=generic,proto3" json:"generic,omitempty"`
	Community     string                 `protobuf:"bytes,5,opt,name=community,proto3" json:"community,omitempty"`
	TrapOid       string                 `protobuf:"bytes,6,opt,name=trap_oid,json=trapOid,proto3" json:"trap_oid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnmpInfo) Reset() {
	*x = SnmpInfo{}
	mi := &file_spog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnmpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnmpInfo) ProtoMessage() {}

func (x *SnmpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnmpInfo.ProtoReflect.Descriptor instead.
func (*SnmpInfo) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{6}
}

func (x *SnmpInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SnmpInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SnmpInfo) GetSpecific() uint32 {
	if x != nil {
		return x.Specific
	}
	return 0
}

func (x *SnmpInfo) GetGeneric() uint32 {
	if x != nil {
		return x.Generic
	}
	return 0
}

func (x *SnmpInfo) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *SnmpInfo) GetTrapOid() string {
	if x != nil {
		return x.TrapOid
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uei           string                 `protobuf:"bytes,2,opt,name=uei,proto3" json:"uei,omitempty"`
	Time          uint64                 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Parameter     []*EventParameter      `protobuf:"bytes,5,rep,name=parameter,proto3" json:"parameter,omitempty"`
	CreateTime    uint64                 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	LogMessage    string                 `protobuf:"bytes,8,opt,name=log_message,json=logMessage,proto3" json:"log_message,omitempty"`
	Severity      Severity               `protobuf:"varint,9,opt,name=severity,proto3,enum=org.opennms.plugin.grpc.proto.spog.Severity" json:"severity,omitempty"`
	IpAddress     string                 `protobuf:"bytes,10,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	DistPoller    string                 `protobuf:"bytes,11,opt,name=dist_poller,json=distPoller,proto3" json:"dist_poller,omitempty"`
	SnmpInfo      *SnmpInfo              `protobuf:"bytes,12,opt,name=snmpInfo,proto3" json:"snmpInfo,omitempty"`
	NodeId        uint64                 `protobuf:"varint,13,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Label         string                 `protobuf:"bytes,14,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_spog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetUei() string {
	if x != nil {
		return x.Uei
	}
	return ""
}

func (x *Event) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetParameter() []*EventParameter {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *Event) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetLogMessage() string {
	if x != nil {
		return x.LogMessage
	}
	return ""
}

func (x *Event) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INDETERMINATE
}

func (x *Event) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Event) GetDistPoller() string {
	if x != nil {
		return x.DistPoller
	}
	return ""
}

func (x *Event) GetSnmpInfo() *SnmpInfo {
	if x != nil {
		return x.SnmpInfo
	}
	return nil
}

func (x *Event) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Event) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type NmsInventoryUpdateList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Snapshot      bool                   `protobuf:"varint,4,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Nodes         []*Node                `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NmsInventoryUpdateList) Reset() {
	*x = NmsInventoryUpdateList{}
	mi := &file_spog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NmsInventoryUpdateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsInventoryUpdateList) ProtoMessage() {}

func (x *NmsInventoryUpdateList) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsInventoryUpdateList.ProtoReflect.Descriptor instead.
func (*NmsInventoryUpdateList) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{8}
}

func (x *NmsInventoryUpdateList) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *NmsInventoryUpdateList) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *NmsInventoryUpdateList) GetSnapshot() bool {
	if x != nil {
		return x.Snapshot
	}
	return false
}

func (x *NmsInventoryUpdateList) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type AlarmUpdateList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Snapshot      bool                   `protobuf:"varint,4,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Alarms        []*Alarm               `protobuf:"bytes,5,rep,name=alarms,proto3" json:"alarms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlarmUpdateList) Reset() {
	*x = AlarmUpdateList{}
	mi := &file_spog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlarmUpdateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmUpdateList) ProtoMessage() {}

func (x *AlarmUpdateList) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmUpdateList.ProtoReflect.Descriptor instead.
func (*AlarmUpdateList) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{9}
}

func (x *AlarmUpdateList) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AlarmUpdateList) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *AlarmUpdateList) GetSnapshot() bool {
	if x != nil {
		return x.Snapshot
	}
	return false
}

func (x *AlarmUpdateList) GetAlarms() []*Alarm {
	if x != nil {
		return x.Alarms
	}
	return nil
}

type EventUpdateList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Snapshot      bool                   `protobuf:"varint,4,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Event         []*Event               `protobuf:"bytes,5,rep,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventUpdateList) Reset() {
	*x = EventUpdateList{}
	mi := &file_spog_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventUpdateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateList) ProtoMessage() {}

func (x *EventUpdateList) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUpdateList.ProtoReflect.Descriptor instead.
func (*EventUpdateList) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{10}
}

func (x *EventUpdateList) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *EventUpdateList) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *EventUpdateList) GetSnapshot() bool {
	if x != nil {
		return x.Snapshot
	}
	return false
}

func (x *EventUpdateList) GetEvent() []*Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type MonitoringInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceType  string                 `protobuf:"bytes,1,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringInstance) Reset() {
	*x = MonitoringInstance{}
	mi := &file_spog_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringInstance) ProtoMessage() {}

func (x *MonitoringInstance) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringInstance.ProtoReflect.Descriptor instead.
func (*MonitoringInstance) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{11}
}

func (x *MonitoringInstance) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *MonitoringInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MonitoringInstance) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

type HeartBeat struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MonitoringInstance *MonitoringInstance    `protobuf:"bytes,1,opt,name=monitoring_instance,json=monitoringInstance,proto3" json:"monitoring_instance,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp          uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	mi := &file_spog_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_spog_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_spog_proto_rawDescGZIP(), []int{12}
}

func (x *HeartBeat) GetMonitoringInstance() *MonitoringInstance {
	if x != nil {
		return x.MonitoringInstance
	}
	return nil
}

func (x *HeartBeat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartBeat) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_spog_proto protoreflect.FileDescriptor

const file_spog_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"spog.proto\x12\"org.opennms.plugin.grpc.proto.spog\x1a\x1bgoogle/protobuf/empty.proto\"\x9f\x01\n" +
	"\fNodeCriteria\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12%\n" +
	"\x0eforeign_source\x18\x02 \x01(\tR\rforeignSource\x12\x1d\n" +
	"\n" +
	"foreign_id\x18\x03 \x01(\tR\tforeignId\x12\x1d\n" +
	"\n" +
	"node_label\x18\x04 \x01(\tR\tnodeLabel\x12\x1a\n" +
	"\blocation\x18\x05 \x01(\tR\blocation\"y\n" +
	"\vIpInterface\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12!\n" +
	"\fprimary_type\x18\x03 \x01(\tR\vprimaryType\x12\x18\n" +
	"\aservice\x18\x04 \x03(\tR\aservice\"\xb3\x02\n" +
	"\rSnmpInterface\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x19\n" +
	"\bif_index\x18\x02 \x01(\rR\aifIndex\x12\x19\n" +
	"\bif_descr\x18\x03 \x01(\tR\aifDescr\x12\x17\n" +
	"\aif_type\x18\x04 \x01(\rR\x06ifType\x12\x17\n" +
	"\aif_name\x18\x05 \x01(\tR\x06ifName\x12\x19\n" +
	"\bif_speed\x18\x06 \x01(\x04R\aifSpeed\x12&\n" +
	"\x0fif_phys_address\x18\a \x01(\tR\rifPhysAddress\x12&\n" +
	"\x0fif_admin_status\x18\b \x01(\rR\rifAdminStatus\x12$\n" +
	"\x0eif_oper_status\x18\t \x01(\rR\fifOperStatus\x12\x19\n" +
	"\bif_alias\x18\n" +
	" \x01(\tR\aifAlias\"\x82\x04\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12%\n" +
	"\x0eforeign_source\x18\x02 \x01(\tR\rforeignSource\x12\x1d\n" +
	"\n" +
	"foreign_id\x18\x03 \x01(\tR\tforeignId\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x1a\n" +
	"\bcategory\x18\x05 \x03(\tR\bcategory\x12\x14\n" +
	"\x05label\x18\x06 \x01(\tR\x05label\x12\x1f\n" +
	"\vcreate_time\x18\a \x01(\x04R\n" +
	"createTime\x12\x1f\n" +
	"\vsys_contact\x18\b \x01(\tR\n" +
	"sysContact\x12'\n" +
	"\x0fsys_description\x18\t \x01(\tR\x0esysDescription\x12\"\n" +
	"\rsys_object_id\x18\n" +
	" \x01(\tR\vsysObjectId\x12\x19\n" +
	"\bsys_name\x18\v \x01(\tR\asysName\x12R\n" +
	"\fip_interface\x18\f \x03(\v2/.org.opennms.plugin.grpc.proto.spog.IpInterfaceR\vipInterface\x12X\n" +
	"\x0esnmp_interface\x18\r \x03(\v21.org.opennms.plugin.grpc.proto.spog.SnmpInterfaceR\rsnmpInterface\"\x8c\a\n" +
	"\x05Alarm\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x10\n" +
	"\x03uei\x18\x02 \x01(\tR\x03uei\x12U\n" +
	"\rnode_criteria\x18\x03 \x01(\v20.org.opennms.plugin.grpc.proto.spog.NodeCriteriaR\fnodeCriteria\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12!\n" +
	"\fservice_name\x18\x05 \x01(\tR\vserviceName\x12#\n" +
	"\rreduction_key\x18\x06 \x01(\tR\freductionKey\x12\x12\n" +
	"\x04type\x18\a \x01(\rR\x04type\x12\x14\n" +
	"\x05count\x18\b \x01(\x04R\x05count\x12\x1a\n" +
	"\bseverity\x18\t \x01(\rR\bseverity\x12(\n" +
	"\x10first_event_time\x18\n" +
	" \x01(\x04R\x0efirstEventTime\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x12\x1f\n" +
	"\vlog_message\x18\f \x01(\tR\n" +
	"logMessage\x12\x19\n" +
	"\back_user\x18\r \x01(\tR\aackUser\x12\x19\n" +
	"\back_time\x18\x0e \x01(\x04R\aackTime\x12&\n" +
	"\x0flast_event_time\x18\x10 \x01(\x04R\rlastEventTime\x12\x19\n" +
	"\bif_index\x18\x11 \x01(\rR\aifIndex\x123\n" +
	"\x15operator_instructions\x18\x12 \x01(\tR\x14operatorInstructions\x12\x1b\n" +
	"\tclear_key\x18\x13 \x01(\tR\bclearKey\x126\n" +
	"\x17managed_object_instance\x18\x14 \x01(\tR\x15managedObjectInstance\x12.\n" +
	"\x13managed_object_type\x18\x15 \x01(\tR\x11managedObjectType\x12M\n" +
	"\frelatedAlarm\x18\x16 \x03(\v2).org.opennms.plugin.grpc.proto.spog.AlarmR\frelatedAlarm\x12(\n" +
	"\x10last_update_time\x18\x19 \x01(\x04R\x0elastUpdateTime\"D\n" +
	"\x04Type\x12\x16\n" +
	"\x12PROBLEM_WITH_CLEAR\x10\x00\x12\t\n" +
	"\x05CLEAR\x10\x01\x12\x19\n" +
	"\x15PROBLEM_WITHOUT_CLEAR\x10\x02\"N\n" +
	"\x0eEventParameter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"\xa3\x01\n" +
	"\bSnmpInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bspecific\x18\x03 \x01(\rR\bspecific\x12\x18\n" +
	"\ageneric\x18\x04 \x01(\rR\ageneric\x12\x1c\n" +
	"\tcommunity\x18\x05 \x01(\tR\tcommunity\x12\x19\n" +
	"\btrap_oid\x18\x06 \x01(\tR\atrapOid\"\x8e\x04\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x10\n" +
	"\x03uei\x18\x02 \x01(\tR\x03uei\x12\x12\n" +
	"\x04time\x18\x03 \x01(\x04R\x04time\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12P\n" +
	"\tparameter\x18\x05 \x03(\v22.org.opennms.plugin.grpc.proto.spog.EventParameterR\tparameter\x12\x1f\n" +
	"\vcreate_time\x18\x06 \x01(\x04R\n" +
	"createTime\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x1f\n" +
	"\vlog_message\x18\b \x01(\tR\n" +
	"logMessage\x12H\n" +
	"\bseverity\x18\t \x01(\x0e2,.org.opennms.plugin.grpc.proto.spog.SeverityR\bseverity\x12\x1d\n" +
	"\n" +
	"ip_address\x18\n" +
	" \x01(\tR\tipAddress\x12\x1f\n" +
	"\vdist_poller\x18\v \x01(\tR\n" +
	"distPoller\x12H\n" +
	"\bsnmpInfo\x18\f \x01(\v2,.org.opennms.plugin.grpc.proto.spog.SnmpInfoR\bsnmpInfo\x12\x17\n" +
	"\anode_id\x18\r \x01(\x04R\x06nodeId\x12\x14\n" +
	"\x05label\x18\x0e \x01(\tR\x05label\"\xba\x01\n" +
	"\x16NmsInventoryUpdateList\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rinstance_name\x18\x03 \x01(\tR\finstanceName\x12\x1a\n" +
	"\bsnapshot\x18\x04 \x01(\bR\bsnapshot\x12>\n" +
	"\x05nodes\x18\x05 \x03(\v2(.org.opennms.plugin.grpc.proto.spog.NodeR\x05nodes\"\xb6\x01\n" +
	"\x0fAlarmUpdateList\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rinstance_name\x18\x03 \x01(\tR\finstanceName\x12\x1a\n" +
	"\bsnapshot\x18\x04 \x01(\bR\bsnapshot\x12A\n" +
	"\x06alarms\x18\x05 \x03(\v2).org.opennms.plugin.grpc.proto.spog.AlarmR\x06alarms\"\xb4\x01\n" +
	"\x0fEventUpdateList\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rinstance_name\x18\x03 \x01(\tR\finstanceName\x12\x1a\n" +
	"\bsnapshot\x18\x04 \x01(\bR\bsnapshot\x12?\n" +
	"\x05event\x18\x05 \x03(\v2).org.opennms.plugin.grpc.proto.spog.EventR\x05event\"\x7f\n" +
	"\x12MonitoringInstance\x12#\n" +
	"\rinstance_type\x18\x01 \x01(\tR\finstanceType\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rinstance_name\x18\x03 \x01(\tR\finstanceName\"\xac\x01\n" +
	"\tHeartBeat\x12g\n" +
	"\x13monitoring_instance\x18\x01 \x01(\v26.org.opennms.plugin.grpc.proto.spog.MonitoringInstanceR\x12monitoringInstance\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp*g\n" +
	"\bSeverity\x12\x11\n" +
	"\rINDETERMINATE\x10\x00\x12\v\n" +
	"\aCLEARED\x10\x01\x12\n" +
	"\n" +
	"\x06NORMAL\x10\x02\x12\v\n" +
	"\aWARNING\x10\x03\x12\t\n" +
	"\x05MINOR\x10\x04\x12\t\n" +
	"\x05MAJOR\x10\x05\x12\f\n" +
	"\bCRITICAL\x10\x062\xaa\x03\n" +
	"\x17NmsInventoryServiceSync\x12k\n" +
	"\x0fInventoryUpdate\x12:.org.opennms.plugin.grpc.proto.spog.NmsInventoryUpdateList\x1a\x16.google.protobuf.Empty\"\x00(\x010\x01\x12`\n" +
	"\vAlarmUpdate\x123.org.opennms.plugin.grpc.proto.spog.AlarmUpdateList\x1a\x16.google.protobuf.Empty\"\x00(\x010\x01\x12`\n" +
	"\vEventUpdate\x123.org.opennms.plugin.grpc.proto.spog.EventUpdateList\x1a\x16.google.protobuf.Empty\"\x00(\x010\x01\x12^\n" +
	"\x0fHeartBeatUpdate\x12-.org.opennms.plugin.grpc.proto.spog.HeartBeat\x1a\x16.google.protobuf.Empty\"\x00(\x010\x01B&\n" +
	"\"org.opennms.plugin.grpc.proto.spogP\x01b\x06proto3"

var (
	file_spog_proto_rawDescOnce sync.Once
	file_spog_proto_rawDescData []byte
)

func file_spog_proto_rawDescGZIP() []byte {
	file_spog_proto_rawDescOnce.Do(func() {
		file_spog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spog_proto_rawDesc), len(file_spog_proto_rawDesc)))
	})
	return file_spog_proto_rawDescData
}

var file_spog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spog_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_spog_proto_goTypes = []any{
	(Severity)(0),                  // 0: org.opennms.plugin.grpc.proto.spog.Severity
	(Alarm_Type)(0),                // 1: org.opennms.plugin.grpc.proto.spog.Alarm.Type
	(*NodeCriteria)(nil),           // 2: org.opennms.plugin.grpc.proto.spog.NodeCriteria
	(*IpInterface)(nil),            // 3: org.opennms.plugin.grpc.proto.spog.IpInterface
	(*SnmpInterface)(nil),          // 4: org.opennms.plugin.grpc.proto.spog.SnmpInterface
	(*Node)(nil),                   // 5: org.opennms.plugin.grpc.proto.spog.Node
	(*Alarm)(nil),                  // 6: org.opennms.plugin.grpc.proto.spog.Alarm
	(*EventParameter)(nil),         // 7: org.opennms.plugin.grpc.proto.spog.EventParameter
	(*SnmpInfo)(nil),               // 8: org.opennms.plugin.grpc.proto.spog.SnmpInfo
	(*Event)(nil),                  // 9: org.opennms.plugin.grpc.proto.spog.Event
	(*NmsInventoryUpdateList)(nil), // 10: org.opennms.plugin.grpc.proto.spog.NmsInventoryUpdateList
	(*AlarmUpdateList)(nil),        // 11: org.opennms.plugin.grpc.proto.spog.AlarmUpdateList
	(*EventUpdateList)(nil),        // 12: org.opennms.plugin.grpc.proto.spog.EventUpdateList
	(*MonitoringInstance)(nil),     // 13: org.opennms.plugin.grpc.proto.spog.MonitoringInstance
	(*HeartBeat)(nil),              // 14: org.opennms.plugin.grpc.proto.spog.HeartBeat
	(*emptypb.Empty)(nil),          // 15: google.protobuf.Empty
}
var file_spog_proto_depIdxs = []int32{
	3,  // 0: org.opennms.plugin.grpc.proto.spog.Node.ip_interface:type_name -> org.opennms.plugin.grpc.proto.spog.IpInterface
	4,  // 1: org.opennms.plugin.grpc.proto.spog.Node.snmp_interface:type_name -> org.opennms.plugin.grpc.proto.spog.SnmpInterface
	2,  // 2: org.opennms.plugin.grpc.proto.spog.Alarm.node_criteria:type_name -> org.opennms.plugin.grpc.proto.spog.NodeCriteria
	6,  // 3: org.opennms.plugin.grpc.proto.spog.Alarm.relatedAlarm:type_name -> org.opennms.plugin.grpc.proto.spog.Alarm
	7,  // 4: org.opennms.plugin.grpc.proto.spog.Event.parameter:type_name -> org.opennms.plugin.grpc.proto.spog.EventParameter
	0,  // 5: org.opennms.plugin.grpc.proto.spog.Event.severity:type_name -> org.opennms.plugin.grpc.proto.spog.Severity
	8,  // 6: org.opennms.plugin.grpc.proto.spog.Event.snmpInfo:type_name -> org.opennms.plugin.grpc.proto.spog.SnmpInfo
	5,  // 7: org.opennms.plugin.grpc.proto.spog.NmsInventoryUpdateList.nodes:type_name -> org.opennms.plugin.grpc.proto.spog.Node
	6,  // 8: org.opennms.plugin.grpc.proto.spog.AlarmUpdateList.alarms:type_name -> org.opennms.plugin.grpc.proto.spog.Alarm
	9,  // 9: org.opennms.plugin.grpc.proto.spog.EventUpdateList.event:type_name -> org.opennms.plugin.grpc.proto.spog.Event
	13, // 10: org.opennms.plugin.grpc.proto.spog.HeartBeat.monitoring_instance:type_name -> org.opennms.plugin.grpc.proto.spog.MonitoringInstance
	10, // 11: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.InventoryUpdate:input_type -> org.opennms.plugin.grpc.proto.spog.NmsInventoryUpdateList
	11, // 12: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.AlarmUpdate:input_type -> org.opennms.plugin.grpc.proto.spog.AlarmUpdateList
	12, // 13: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.EventUpdate:input_type -> org.opennms.plugin.grpc.proto.spog.EventUpdateList
	14, // 14: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.HeartBeatUpdate:input_type -> org.opennms.plugin.grpc.proto.spog.HeartBeat
	15, // 15: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.InventoryUpdate:output_type -> google.protobuf.Empty
	15, // 16: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.AlarmUpdate:output_type -> google.protobuf.Empty
	15, // 17: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.EventUpdate:output_type -> google.protobuf.Empty
	15, // 18: org.opennms.plugin.grpc.proto.spog.NmsInventoryServiceSync.HeartBeatUpdate:output_type -> google.protobuf.Empty
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spog_proto_init() }
func file_spog_proto_init() {
	if File_spog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spog_proto_rawDesc), len(file_spog_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spog_proto_goTypes,
		DependencyIndexes: file_spog_proto_depIdxs,
		EnumInfos:         file_spog_proto_enumTypes,
		MessageInfos:      file_spog_proto_msgTypes,
	}.Build()
	File_spog_proto = out.File
	file_spog_proto_goTypes = nil
	file_spog_proto_depIdxs = nil
}
